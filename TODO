Suggestions from big Brice da goat:
list_split works as intended

plot_list requires index
plot_lists makes a list of all the plots from the dataset

Need to make distance columns in split lists numeric


General Package TODO:

add better error handling to all functions

want to add testing that works with devtools::test

NEED BETTER EXAMPLES

cat_match TODO:
add an argument for when messy and clean are same length
  find a mapping with the least total distance and prevent duplicates

add way to make sure cat_match uses all the clean options at least once
  https://github.com/hkarp1/messy.cats/issues/3

cat_... functions match NA to messy string if there is no match under threshold
  might be better to have it match the messy string so NAs aren't inserted into
  the vector / dataframe


fix typos TODO:

Switch from percentage of typos (dist / length) to raw number of typos (dist)

idea from dk:
  string distance calculation that weights letters that are close in qwerty-space
  would work really well for same length strings

include capitilzation

setting the arguments thr and occ_ratio is tough
  should probably make a method for determining the best way
  select_metric type thing
  occ_ratio needs to be less than:
    the least common correct word / corresponding typo
  threshold needs to be more than:
    distance between most fucked typo and correct spelling

viable applications
  add handling for multiple typo matches
    c(amy, andy, amdy)
  add to vignette



name match TODO:
develop better system for automatically finding "name" column
  right now it looks for "first" "last" or "full"
  should probably look for name, but wary of it finding "org name" or other names

I think it would be cool to do regular string distance matching, then if it doesn't
find something below the threshold, use a dictionary to try and clean the typos
or just use fix_typos



New Function Ideas:

extract_name
  I have a bunch of fucked up zoom data that has a name in the middle of a bunch
  of bullshit that I want to extract the name from
  e.g.: Sawatch Labs - Sara Booth (she/her) (Sarah Booth (she/her))
        MacQueen (MacQueen # James Dwayne (Contractor))
        [ltron] Gene Falendysz (Gene Falendysz)
        Ken Wacks ISO/IEC (Ken Wacks [Home Systems])
        SEPA Daisy Chung (Sarah LeBarron)

  I want to extract these names somehow without going through the tedious proces
  of looking through the whole list and finding patterns to implement with regex

    might just be a wrapper for all these regex patterns that people use, but
    alternatively could use a dictionary of names to try and only keep words that
    are deemed "names"


